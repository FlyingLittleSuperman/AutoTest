//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace GisqRealEstate.ProDataSource.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FrameworkServiceSoap", Namespace="http://gisquest.com/webservices/")]
    public partial class FrameworkService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginVerifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoByDeptIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllDepartmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPrivilegesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrivilegesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteLogOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FrameworkService() {
            this.Url = global::GisqRealEstate.ProDataSource.Properties.Settings.Default.GisqLandSystem_ProDataSource_WebReference_FrameworkService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginVerifyCompletedEventHandler LoginVerifyCompleted;
        
        /// <remarks/>
        public event GetAllUserIdCompletedEventHandler GetAllUserIdCompleted;
        
        /// <remarks/>
        public event GetAllUserInfoCompletedEventHandler GetAllUserInfoCompleted;
        
        /// <remarks/>
        public event GetDepartmentInfoCompletedEventHandler GetDepartmentInfoCompleted;
        
        /// <remarks/>
        public event GetUserInfoByDeptIDCompletedEventHandler GetUserInfoByDeptIDCompleted;
        
        /// <remarks/>
        public event GetAllDepartmentsCompletedEventHandler GetAllDepartmentsCompleted;
        
        /// <remarks/>
        public event GetDepartmentCompletedEventHandler GetDepartmentCompleted;
        
        /// <remarks/>
        public event HasPermissionCompletedEventHandler HasPermissionCompleted;
        
        /// <remarks/>
        public event GetRolesCompletedEventHandler GetRolesCompleted;
        
        /// <remarks/>
        public event GetAllPrivilegesCompletedEventHandler GetAllPrivilegesCompleted;
        
        /// <remarks/>
        public event GetPrivilegesCompletedEventHandler GetPrivilegesCompleted;
        
        /// <remarks/>
        public event GetUserInfoCompletedEventHandler GetUserInfoCompleted;
        
        /// <remarks/>
        public event WriteLogCompletedEventHandler WriteLogCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://gisquest.com/webservices/LoginVerify", RequestNamespace="http://gisquest.com/webservices/", ResponseNamespace="http://gisquest.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoginVerify(string account, string password) {
            object[] results = this.Invoke("LoginVerify", new object[] {
                        account,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginVerifyAsync(string account, string password) {
            this.LoginVerifyAsync(account, password, null);
        }
        
        /// <remarks/>
        public void LoginVerifyAsync(string account, string password, object userState) {
            if ((this.LoginVerifyOperationCompleted == null)) {
                this.LoginVerifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginVerifyOperationCompleted);
            }
            this.InvokeAsync("LoginVerify", new object[] {
                        account,
                        password}, this.LoginVerifyOperationCompleted, userState);
        }
        
        private void OnLoginVerifyOperationCompleted(object arg) {
            if ((this.LoginVerifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginVerifyCompleted(this, new LoginVerifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://gisquest.com/webservices/GetAllUserId", RequestNamespace="http://gisquest.com/webservices/", ResponseNamespace="http://gisquest.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllUserId() {
            object[] results = this.Invoke("GetAllUserId", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUserIdAsync() {
            this.GetAllUserIdAsync(null);
        }
        
        /// <remarks/>
        public void GetAllUserIdAsync(object userState) {
            if ((this.GetAllUserIdOperationCompleted == null)) {
                this.GetAllUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUserIdOperationCompleted);
            }
            this.InvokeAsync("GetAllUserId", new object[0], this.GetAllUserIdOperationCompleted, userState);
        }
        
        private void OnGetAllUserIdOperationCompleted(object arg) {
            if ((this.GetAllUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUserIdCompleted(this, new GetAllUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://gisquest.com/webservices/GetAllUserInfo", RequestNamespace="http://gisquest.com/webservices/", ResponseNamespace="http://gisquest.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllUserInfo() {
            object[] results = this.Invoke("GetAllUserInfo", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUserInfoAsync() {
            this.GetAllUserInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetAllUserInfoAsync(object userState) {
            if ((this.GetAllUserInfoOperationCompleted == null)) {
                this.GetAllUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUserInfoOperationCompleted);
            }
            this.InvokeAsync("GetAllUserInfo", new object[0], this.GetAllUserInfoOperationCompleted, userState);
        }
        
        private void OnGetAllUserInfoOperationCompleted(object arg) {
            if ((this.GetAllUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUserInfoCompleted(this, new GetAllUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://gisquest.com/webservices/GetDepartmentInfo", RequestNamespace="http://gisquest.com/webservices/", ResponseNamespace="http://gisquest.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDepartmentInfo(string userId) {
            object[] results = this.Invoke("GetDepartmentInfo", new object[] {
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentInfoAsync(string userId) {
            this.GetDepartmentInfoAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetDepartmentInfoAsync(string userId, object userState) {
            if ((this.GetDepartmentInfoOperationCompleted == null)) {
                this.GetDepartmentInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentInfoOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentInfo", new object[] {
                        userId}, this.GetDepartmentInfoOperationCompleted, userState);
        }
        
        private void OnGetDepartmentInfoOperationCompleted(object arg) {
            if ((this.GetDepartmentInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentInfoCompleted(this, new GetDepartmentInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://gisquest.com/webservices/GetUserInfoByDeptID", RequestNamespace="http://gisquest.com/webservices/", ResponseNamespace="http://gisquest.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserInfoByDeptID(string deptId) {
            object[] results = this.Invoke("GetUserInfoByDeptID", new object[] {
                        deptId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoByDeptIDAsync(string deptId) {
            this.GetUserInfoByDeptIDAsync(deptId, null);
        }
        
        /// <remarks/>
        public void GetUserInfoByDeptIDAsync(string deptId, object userState) {
            if ((this.GetUserInfoByDeptIDOperationCompleted == null)) {
                this.GetUserInfoByDeptIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoByDeptIDOperationCompleted);
            }
            this.InvokeAsync("GetUserInfoByDeptID", new object[] {
                        deptId}, this.GetUserInfoByDeptIDOperationCompleted, userState);
        }
        
        private void OnGetUserInfoByDeptIDOperationCompleted(object arg) {
            if ((this.GetUserInfoByDeptIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoByDeptIDCompleted(this, new GetUserInfoByDeptIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://gisquest.com/webservices/GetAllDepartments", RequestNamespace="http://gisquest.com/webservices/", ResponseNamespace="http://gisquest.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllDepartments() {
            object[] results = this.Invoke("GetAllDepartments", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllDepartmentsAsync() {
            this.GetAllDepartmentsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllDepartmentsAsync(object userState) {
            if ((this.GetAllDepartmentsOperationCompleted == null)) {
                this.GetAllDepartmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllDepartmentsOperationCompleted);
            }
            this.InvokeAsync("GetAllDepartments", new object[0], this.GetAllDepartmentsOperationCompleted, userState);
        }
        
        private void OnGetAllDepartmentsOperationCompleted(object arg) {
            if ((this.GetAllDepartmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllDepartmentsCompleted(this, new GetAllDepartmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://gisquest.com/webservices/GetDepartment", RequestNamespace="http://gisquest.com/webservices/", ResponseNamespace="http://gisquest.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDepartment(string projectCode) {
            object[] results = this.Invoke("GetDepartment", new object[] {
                        projectCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentAsync(string projectCode) {
            this.GetDepartmentAsync(projectCode, null);
        }
        
        /// <remarks/>
        public void GetDepartmentAsync(string projectCode, object userState) {
            if ((this.GetDepartmentOperationCompleted == null)) {
                this.GetDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentOperationCompleted);
            }
            this.InvokeAsync("GetDepartment", new object[] {
                        projectCode}, this.GetDepartmentOperationCompleted, userState);
        }
        
        private void OnGetDepartmentOperationCompleted(object arg) {
            if ((this.GetDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentCompleted(this, new GetDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://gisquest.com/webservices/HasPermission", RequestNamespace="http://gisquest.com/webservices/", ResponseNamespace="http://gisquest.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HasPermission(string userID, string privilegeCode) {
            object[] results = this.Invoke("HasPermission", new object[] {
                        userID,
                        privilegeCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HasPermissionAsync(string userID, string privilegeCode) {
            this.HasPermissionAsync(userID, privilegeCode, null);
        }
        
        /// <remarks/>
        public void HasPermissionAsync(string userID, string privilegeCode, object userState) {
            if ((this.HasPermissionOperationCompleted == null)) {
                this.HasPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasPermissionOperationCompleted);
            }
            this.InvokeAsync("HasPermission", new object[] {
                        userID,
                        privilegeCode}, this.HasPermissionOperationCompleted, userState);
        }
        
        private void OnHasPermissionOperationCompleted(object arg) {
            if ((this.HasPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasPermissionCompleted(this, new HasPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://gisquest.com/webservices/GetRoles", RequestNamespace="http://gisquest.com/webservices/", ResponseNamespace="http://gisquest.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRoles(string userID) {
            object[] results = this.Invoke("GetRoles", new object[] {
                        userID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRolesAsync(string userID) {
            this.GetRolesAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetRolesAsync(string userID, object userState) {
            if ((this.GetRolesOperationCompleted == null)) {
                this.GetRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRolesOperationCompleted);
            }
            this.InvokeAsync("GetRoles", new object[] {
                        userID}, this.GetRolesOperationCompleted, userState);
        }
        
        private void OnGetRolesOperationCompleted(object arg) {
            if ((this.GetRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRolesCompleted(this, new GetRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://gisquest.com/webservices/GetAllPrivileges", RequestNamespace="http://gisquest.com/webservices/", ResponseNamespace="http://gisquest.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllPrivileges(string userID) {
            object[] results = this.Invoke("GetAllPrivileges", new object[] {
                        userID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPrivilegesAsync(string userID) {
            this.GetAllPrivilegesAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetAllPrivilegesAsync(string userID, object userState) {
            if ((this.GetAllPrivilegesOperationCompleted == null)) {
                this.GetAllPrivilegesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPrivilegesOperationCompleted);
            }
            this.InvokeAsync("GetAllPrivileges", new object[] {
                        userID}, this.GetAllPrivilegesOperationCompleted, userState);
        }
        
        private void OnGetAllPrivilegesOperationCompleted(object arg) {
            if ((this.GetAllPrivilegesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPrivilegesCompleted(this, new GetAllPrivilegesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://gisquest.com/webservices/GetPrivileges", RequestNamespace="http://gisquest.com/webservices/", ResponseNamespace="http://gisquest.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPrivileges(string userID, string funcItemCode) {
            object[] results = this.Invoke("GetPrivileges", new object[] {
                        userID,
                        funcItemCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrivilegesAsync(string userID, string funcItemCode) {
            this.GetPrivilegesAsync(userID, funcItemCode, null);
        }
        
        /// <remarks/>
        public void GetPrivilegesAsync(string userID, string funcItemCode, object userState) {
            if ((this.GetPrivilegesOperationCompleted == null)) {
                this.GetPrivilegesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrivilegesOperationCompleted);
            }
            this.InvokeAsync("GetPrivileges", new object[] {
                        userID,
                        funcItemCode}, this.GetPrivilegesOperationCompleted, userState);
        }
        
        private void OnGetPrivilegesOperationCompleted(object arg) {
            if ((this.GetPrivilegesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrivilegesCompleted(this, new GetPrivilegesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://gisquest.com/webservices/GetUserInfo", RequestNamespace="http://gisquest.com/webservices/", ResponseNamespace="http://gisquest.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserInfo(string userID) {
            object[] results = this.Invoke("GetUserInfo", new object[] {
                        userID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(string userID) {
            this.GetUserInfoAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(string userID, object userState) {
            if ((this.GetUserInfoOperationCompleted == null)) {
                this.GetUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserInfo", new object[] {
                        userID}, this.GetUserInfoOperationCompleted, userState);
        }
        
        private void OnGetUserInfoOperationCompleted(object arg) {
            if ((this.GetUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoCompleted(this, new GetUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://gisquest.com/webservices/WriteLog", RequestNamespace="http://gisquest.com/webservices/", ResponseNamespace="http://gisquest.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WriteLog(string staffName, string message, string userHostName, string projectCode, string logType) {
            object[] results = this.Invoke("WriteLog", new object[] {
                        staffName,
                        message,
                        userHostName,
                        projectCode,
                        logType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WriteLogAsync(string staffName, string message, string userHostName, string projectCode, string logType) {
            this.WriteLogAsync(staffName, message, userHostName, projectCode, logType, null);
        }
        
        /// <remarks/>
        public void WriteLogAsync(string staffName, string message, string userHostName, string projectCode, string logType, object userState) {
            if ((this.WriteLogOperationCompleted == null)) {
                this.WriteLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteLogOperationCompleted);
            }
            this.InvokeAsync("WriteLog", new object[] {
                        staffName,
                        message,
                        userHostName,
                        projectCode,
                        logType}, this.WriteLogOperationCompleted, userState);
        }
        
        private void OnWriteLogOperationCompleted(object arg) {
            if ((this.WriteLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteLogCompleted(this, new WriteLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void LoginVerifyCompletedEventHandler(object sender, LoginVerifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginVerifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginVerifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAllUserIdCompletedEventHandler(object sender, GetAllUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAllUserInfoCompletedEventHandler(object sender, GetAllUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetDepartmentInfoCompletedEventHandler(object sender, GetDepartmentInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetUserInfoByDeptIDCompletedEventHandler(object sender, GetUserInfoByDeptIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoByDeptIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoByDeptIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAllDepartmentsCompletedEventHandler(object sender, GetAllDepartmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllDepartmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllDepartmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetDepartmentCompletedEventHandler(object sender, GetDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void HasPermissionCompletedEventHandler(object sender, HasPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetRolesCompletedEventHandler(object sender, GetRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAllPrivilegesCompletedEventHandler(object sender, GetAllPrivilegesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPrivilegesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPrivilegesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetPrivilegesCompletedEventHandler(object sender, GetPrivilegesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrivilegesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrivilegesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetUserInfoCompletedEventHandler(object sender, GetUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void WriteLogCompletedEventHandler(object sender, WriteLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WriteLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WriteLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591